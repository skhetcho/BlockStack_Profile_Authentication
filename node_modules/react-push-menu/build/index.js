'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _PushMenu$propTypes;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _slug = require('./lib/slug');

var _slug2 = _interopRequireDefault(_slug);

var _DefaultBackButton = require('./DefaultBackButton');

var _DefaultBackButton2 = _interopRequireDefault(_DefaultBackButton);

var _DefaultLinkComponent = require('./DefaultLinkComponent');

var _DefaultLinkComponent2 = _interopRequireDefault(_DefaultLinkComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var mlPushMenu = require('./lib/mlpushmenu');
// import {ChevronRight} from 'react-icons/lib/fa';


var defaultPropMaps = {
  displayName: 'name',
  linkClasses: 'classes',
  childPropName: 'children',
  expanderClasses: 'expClasses',
  url: 'url'
};

var PushMenu = function (_Component) {
  _inherits(PushMenu, _Component);

  function PushMenu(props) {
    _classCallCheck(this, PushMenu);

    var _this = _possibleConstructorReturn(this, (PushMenu.__proto__ || Object.getPrototypeOf(PushMenu)).call(this, props));

    _this.renderExpandLink = function (nodeData) {
      var ExpanderComponent = _this.props.expanderComponent;
      var node = nodeData.node,
          nodeTitle = nodeData.nodeTitle,
          propMap = nodeData.propMap;

      return _react2.default.createElement(
        'span',
        { className: 'rpm-node-exp rpm-inline-block' },
        _react2.default.createElement(ExpanderComponent, {
          data: nodeData
        })
      );
    };

    _this.renderNode = function (node, key, propMap) {
      var hasChildren = node.children && node.children.length > 0;
      var nodeTitle = node[propMap.displayName];
      var nodeChildren = node[propMap.childPropName];
      var nodeData = {
        menu: _this.state.pushInstance,
        node: node,
        propMap: propMap,
        rootNode: _this.props.nodes
      };
      var LinkComponent = _this.props.linkComponent || _DefaultLinkComponent2.default;
      return _react2.default.createElement(
        'li',
        { key: (0, _slug2.default)(nodeTitle) + '-' + key },
        _react2.default.createElement(
          'div',
          { className: _this.classPrefix + 'node-cntr' },
          _react2.default.createElement(LinkComponent, {
            onNodeClick: _this.props.onNodeClick,
            data: nodeData
          }),
          hasChildren && _this.renderExpandLink(nodeData)
        ),
        nodeChildren && nodeChildren.length > 0 && _this.renderSubMenu(nodeData)
      );
    };

    _this.renderSubMenu = function (nodeData) {
      var node = nodeData.node,
          nodeTitle = nodeData.nodeTitle,
          propMap = nodeData.propMap;

      var nodeChildren = node[propMap.childPropName];
      var _this$props = _this.props,
          backComponent = _this$props.backComponent,
          backIcon = _this$props.backIcon;

      var BackComponent = backComponent || _DefaultBackButton2.default;
      return _react2.default.createElement(
        'div',
        { className: 'rpm-mp-level' },
        _react2.default.createElement(
          'h2',
          null,
          nodeTitle
        ),
        _react2.default.createElement(
          'div',
          { className: 'rpm-inline-block ' + _this.classPrefix + 'mp-back' },
          _react2.default.createElement(BackComponent, { classPrefix: _this.classPrefix, data: nodeData, backIcon: backIcon })
        ),
        _react2.default.createElement(
          'ul',
          null,
          nodeChildren && nodeChildren.length > 0 && nodeChildren.map(function (node, key) {
            return _this.renderNode(node, key, propMap);
          })
        )
      );
    };

    _this.classPrefix = 'rpm-';
    _this.state = {
      pushInstance: null
    };
    return _this;
  }

  _createClass(PushMenu, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.state.pushInstance = new mlPushMenu(document.getElementById('rpm-mp-menu'), document.getElementById(this.props.menuTrigger), {
        type: this.props.type,
        open: this.props.isOpen,
        autoHide: this.props.autoHide,
        onMenuOpen: this.props.onMenuOpen,
        onMenuClose: this.props.onMenuClose
      });
      this.setState({ pushInstance: this.state.pushInstance });
      this.props.getRef(this.state.pushInstance);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var propMap = Object.assign({}, defaultPropMaps, this.props.propMap);
      var nodeChildren = this.props.nodes[propMap.childPropName] || [];
      return _react2.default.createElement(
        'div',
        { className: 'rpm-container', id: 'rpm-container' },
        _react2.default.createElement(
          'div',
          { className: this.classPrefix + 'mp-pusher', id: this.classPrefix + 'mp-pusher' },
          _react2.default.createElement(
            'nav',
            { id: 'rpm-mp-menu', className: 'rpm-mp-menu' },
            _react2.default.createElement(
              'div',
              { className: 'rpm-mp-level' },
              _react2.default.createElement(
                'div',
                { className: 'rpm-mp-header' },
                this.props.nodes.header
              ),
              _react2.default.createElement(
                'ul',
                null,
                nodeChildren && nodeChildren.map(function (node, key) {
                  return _this2.renderNode(node, key, propMap);
                })
              )
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'rpm-scroller' },
            _react2.default.createElement(
              'div',
              { className: 'rpm-scroller-inner' },
              this.props.children
            )
          )
        )
      );
    }
  }]);

  return PushMenu;
}(_react.Component);

exports.default = PushMenu;


PushMenu.propTypes = (_PushMenu$propTypes = {
  propMap: _propTypes2.default.object,
  backIcon: _propTypes2.default.node,
  forwardIcon: _propTypes2.default.node
}, _defineProperty(_PushMenu$propTypes, 'propMap', _propTypes2.default.object), _defineProperty(_PushMenu$propTypes, 'nodes', _propTypes2.default.object), _defineProperty(_PushMenu$propTypes, 'isOpen', _propTypes2.default.bool), _defineProperty(_PushMenu$propTypes, 'type', _propTypes2.default.oneOf(['cover', 'overlap'])), _defineProperty(_PushMenu$propTypes, 'onNodeClick', _propTypes2.default.func), _defineProperty(_PushMenu$propTypes, 'getRef', _propTypes2.default.func), _defineProperty(_PushMenu$propTypes, 'menuTrigger', _propTypes2.default.string), _defineProperty(_PushMenu$propTypes, 'linkComponent', _propTypes2.default.func), _defineProperty(_PushMenu$propTypes, 'backComponent', _propTypes2.default.func), _defineProperty(_PushMenu$propTypes, 'onMenuOpen', _propTypes2.default.func), _defineProperty(_PushMenu$propTypes, 'onMenuClose', _propTypes2.default.func), _defineProperty(_PushMenu$propTypes, 'expanderComponent', _propTypes2.default.func.isRequired), _PushMenu$propTypes);

PushMenu.defaultProps = {
  propMap: defaultPropMaps,
  type: 'cover',
  menuTrigger: 'rpm-trigger',
  isOpen: false,
  getRef: function getRef() {},
  onNodeClick: function onNodeClick() {},
  nodes: {},
  onMenuClose: function onMenuClose() {},
  onMenuOpen: function onMenuOpen() {}
};